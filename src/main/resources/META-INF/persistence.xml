<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence  http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
    <persistence-unit name="jpe-aas" transaction-type="RESOURCE_LOCAL">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <class>fr.ird.aas.orm.LDAPUser</class>
        <class>fr.ird.aas.orm.AbstractAuthorization</class>
        <class>fr.ird.aas.orm.Authorization</class>
        <class>fr.ird.aas.orm.AbstractRole</class>
        <class>fr.ird.aas.orm.Role</class>
        <class>fr.ird.aas.orm.AbstractUser</class>
        <class>fr.ird.aas.orm.User</class>
        <class>fr.ird.jpe.web.aas.JPEUser</class>
        <exclude-unlisted-classes>false</exclude-unlisted-classes>
        <shared-cache-mode>NONE</shared-cache-mode>
        <validation-mode>NONE</validation-mode>
        <properties>
            <!--<property name="javax.persistence.jdbc.url" value="jdbc:h2:~/h2/ird-aas"/>-->
            <!-- The database platform is auto-detected by default,
            if you want to set a specific platform this can be set. -->
            <property name="eclipselink.target-database" value="PostgreSQL"/>
            <!-- Optimize database writes to use batching. -->
            <property name="eclipselink.jdbc.batch-writing" value="JDBC"/>
            <!-- Avoids flush being triggered before every query execution. -->
            <property name="eclipselink.persistence-context.flush-mode" value="COMMIT"/>
            <!-- Configure connection pool. -->
            <property name="eclipselink.jdbc.connections.initial" value="1"/>
            <property name="eclipselink.jdbc.connections.min" value="64"/>
            <property name="eclipselink.jdbc.connections.max" value="64"/>
            <!-- In JSE no server platform is used, if you wish to use this example is a JEE server with JTA,
            then you need to set this. -->
            <!-- property name="eclipselink.target-server" value="WebLogic" / -->
            <!-- Configure cache size. -->
            <property name="eclipselink.cache.size.default" value="1000"/>
            <!-- If desired, this option would disable caching. -->
            <!-- property name="eclipselink.cache.shared.default" value="false" /-->
            <!-- If desired, this option would force a JDBC connection to be held for the duration of an EntityManager,
            instead of returned to the pool in between queries/transactions. -->
            <!-- property name="eclipselink.jdbc.exclusive-connection.mode" value="Always" / -->
            <!-- Configure database to be created on startup if not already existing. -->
            <!-- property name="eclipselink.ddl-generation" value="create-tables" / -->
            <!-- To drop and replace existing schema this can be used. -->
            <!--<property name="eclipselink.create-ddl-jdbc-file-name" value="createDDL_ddlGeneration.jdbc"/>-->
            <!--<property name="eclipselink.drop-ddl-jdbc-file-name" value="dropDDL_ddlGeneration.jdbc"/>-->
            <!--<property name="eclipselink.ddl-generation.output-mode" value="both"/>-->
            <!--<property name="eclipselink.ddl-generation" value="none"/>-->
            <!--Creer la base de donnÃ©e-->
            <property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>
            <!-- Configure simple SQL logging for demonstration. -->
            <property name="eclipselink.logging.level" value="OFF"/>
            <property name="eclipselink.logging.thread" value="false"/>
            <property name="eclipselink.logging.session" value="false"/>
            <property name="eclipselink.logging.exceptions" value="true"/>
            <property name="eclipselink.logging.timestamp" value="false"/>
        </properties>
    </persistence-unit>
</persistence>
